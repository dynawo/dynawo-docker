# Copyright (c) 2015-2019, RTE (http://www.rte-france.com)
# See AUTHORS.txt
# All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, you can obtain one at http://mozilla.org/MPL/2.0/.
# SPDX-License-Identifier: MPL-2.0
#
# This file is part of Dynawo, an hybrid C++/Modelica open source time domain simulation tool for power systems.
FROM ubuntu:20.04
LABEL maintainer Gautier Bureau "gautier.bureau@rte-france.com"

ARG USER_NAME=dynawo_developer
ARG USER_ID=1000
ARG GROUP_ID=1000
ARG GROUP_NAME=dynawo_developer

ENV TZ=Europe/Paris \
DEBIAN_FRONTEND=noninteractive

RUN apt update \
&& apt upgrade -y -q \
&& apt install -y git \
  gcc \
  g++ \
  gfortran \
  autoconf \
  pkgconf \
  automake \
  make \
  libtool \
  cmake \
  hwloc \
  openjdk-8-jdk \
  libblas-dev \
  liblpsolve55-dev \
  libarchive-dev \
  doxygen \
  doxygen-latex \
  liblapack-dev \
  libexpat1-dev \
  libsqlite3-dev \
  zlib1g-dev \
  gettext \
  patch \
  clang \
  python3-pip \
  libncurses5-dev \
  libreadline-dev \
  libdigest-perl-md5-perl \
  unzip \
  gcovr \
  lcov \
  libboost-all-dev \
  qt5-default \
  lsb-release \
  libxml2-utils \
  python-lxml \
  python-psutil \
  wget \
  libcurl4-openssl-dev \
  rsync \
  libopenblas-openmp-dev \
  curl \
  sudo \
  vim \
  ninja-build \
  gdb \
  gdbserver \
  libsecret-1-0 \
  bash-completion \
  lynx \
  libgoogle-perftools4 \
&& apt -y remove libopenmpi3 \
&& apt -y install mpich \
&& apt clean \
&& rm -rf /var/lib/apt/lists/* \
&& wget 'https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64' -O vscode.deb \
&& dpkg -i ./vscode.deb \
&& rm -f vscode.deb \
&& cd /opt \
&& wget 'https://github.com/microsoft/vscode-cpptools/releases/download/v1.16.3/cpptools-linux.vsix' -O cpptools-linux.vsix \
&& wget 'https://github.com/microsoft/vscode-cmake-tools/releases/download/v1.14.33/cmake-tools.vsix' -O cmake-tools.vsix \
&& wget 'https://github.com/fredericbonnet/cmake-test-explorer/releases/download/v0.17.1/cmake-test-adapter-0.17.1.vsix' -O cmake-test-adapter-0.17.1.vsix

RUN curl -o /usr/local/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/1.4/gosu-$(dpkg --print-architecture)" \
  && chmod +x /usr/local/bin/gosu

COPY entrypoint.sh /usr/local/bin/entrypoint.sh

RUN groupadd -f ${GROUP_NAME} -g ${GROUP_ID}

RUN useradd -l -m -d /home/${USER_NAME} ${USER_NAME} -g ${GROUP_ID} -u ${USER_ID}

ADD https://api.github.com/repos/dynawo/dynawo/git/refs/heads/master version.json

RUN cat version.json

USER ${USER_NAME}

COPY install_dynawo.sh /opt

WORKDIR /home/${USER_NAME}

RUN git clone https://github.com/dynawo/dynawo.git dynawo \
&& cd dynawo \
&& echo '#!/bin/bash \n\
export DYNAWO_HOME=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)\n\
\n\
export DYNAWO_SRC_OPENMODELICA=$DYNAWO_HOME/OpenModelica/Source\n\
export DYNAWO_INSTALL_OPENMODELICA=$DYNAWO_HOME/OpenModelica/Install\n\
\n\
export DYNAWO_LOCALE=en_GB\n\
export DYNAWO_RESULTS_SHOW=false\n\
export DYNAWO_BROWSER=xdg-open\n\
\n\
export DYNAWO_NB_PROCESSORS_USED=2\n\
\n\
export DYNAWO_BUILD_TYPE=Debug\n\
export DYNAWO_PYTHON_COMMAND=python3\n\
\n\
$DYNAWO_HOME/util/envDynawo.sh $@' > myEnvDynawo.sh \
&& chmod +x myEnvDynawo.sh \
&& ./myEnvDynawo.sh build-user \
&& ./myEnvDynawo.sh deploy \
&& ./myEnvDynawo.sh deploy-autocompletion --deploy \
&& rm -rf OpenModelica/Source \
&& rm -rf OpenModelica/Install/share \
&& rm -f OpenModelica/Install/lib/libipopt.so.0.0.0 \
&& cd .. \
&& git clone https://github.com/dynawo/dynawo-algorithms.git \
&& cd dynawo-algorithms \
&& echo '#!/bin/bash \n\
export DYNAWO_ALGORITHMS_HOME=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)\n\
export DYNAWO_HOME=TO_REPLACE\n\
\n\
export DYNAWO_LOCALE=en_GB\n\
export DYNAWO_RESULTS_SHOW=false\n\
export DYNAWO_BROWSER=xdg-open\n\
\n\
export DYNAWO_NB_PROCESSORS_USED=2\n\
\n\
export DYNAWO_BUILD_TYPE=Debug\n\
export DYNAWO_PYTHON_COMMAND=python3\n\
\n\
$DYNAWO_ALGORITHMS_HOME/util/envDynawoAlgorithms.sh $@' > myEnvDynawoAlgorithms.sh \
&& sed -i "s|TO_REPLACE|/home/${USER_NAME}/dynawo/deploy/gcc9/shared/dynawo|" myEnvDynawoAlgorithms.sh \
&& chmod +x myEnvDynawoAlgorithms.sh \
&& ./myEnvDynawoAlgorithms.sh build \
&& ./myEnvDynawoAlgorithms.sh deploy \
&& cd .. \
&& git clone https://github.com/dynawo/dynaflow-launcher.git \
&& cd dynaflow-launcher \
&& echo '#!/bin/bash \n\
export DYNAFLOW_LAUNCHER_HOME=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)\n\
export DYNAWO_HOME=TO_REPLACE_A\n\
export DYNAWO_ALGORITHMS_HOME=TO_REPLACE_B\n\
\n\
export DYNAFLOW_LAUNCHER_PROCESSORS_USED=2\n\
\n\
export DYNAFLOW_LAUNCHER_BUILD_TYPE=Debug\n\
export DYNAWO_PYTHON_COMMAND=python3\n\
\n\
$DYNAFLOW_LAUNCHER_HOME/scripts/envDFL.sh $@' > myEnvDFL.sh \
&& sed -i "s|TO_REPLACE_A|/home/${USER_NAME}/dynawo/deploy/gcc9/shared/dynawo|" myEnvDFL.sh \
&& sed -i "s|TO_REPLACE_B|/home/${USER_NAME}/dynawo-algorithms/deploy/gcc9/dynawo-algorithms|" myEnvDFL.sh \
&& chmod +x myEnvDFL.sh \
&& code --install-extension /opt/cpptools-linux.vsix \
&& code --install-extension /opt/cmake-tools.vsix \
&& code --install-extension /opt/cmake-test-adapter-0.17.1.vsix

USER root

RUN rm -f /opt/*.vsix

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

CMD ["/bin/bash"]
